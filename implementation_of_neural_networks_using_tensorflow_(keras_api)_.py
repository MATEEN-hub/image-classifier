# -*- coding: utf-8 -*-
"""Implementation of  Neural Networks using TensorFlow (Keras API) .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hgYBctwlpiroaPJQ_E-WTzvz0IfRdSyw

```
Import required libraries
```
"""

import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense,Flatten
from tensorflow.keras.datasets import mnist
from tensorflow.keras.utils import to_categorical

"""Step 2: Load and Preprocess the Data

"""

(x_train, y_train),(x_test, y_test) = mnist.load_data()
x_train= x_train/255.0
x_test = x_test/255.0
y_train=to_categorical(y_train)
y_test=to_categorical(y_test)
print(x_train.shape,y_train.shape)

model = Sequential([
    Flatten(input_shape=(28, 28)),
    Dense(128, activation='relu'),
    Dense(10, activation='softmax')
])

model.compile(
    optimizer='adam',
    loss='categorical_crossentropy',
    metrics=['accuracy']
)

history = model.fit(
    x_train, y_train,
    validation_split=0.2,
    epochs=5,
    batch_size=32
)

test_loss, test_accuracy = model.evaluate(x_test, y_test)
print("Test Accuracy: {:.2f}%".format(test_accuracy * 100))

import numpy as np
prediction = model.predict(np.expand_dims(x_test[0], axis=0))
print("Predicted Label:", np.argmax(prediction))

import matplotlib.pyplot as plt
plt.plot(history.history['accuracy'], label='Training Accuracy')
plt.plot(history.history['val_accuracy'], label='Validation Accuracy')
plt.legend()
plt.title("Accuracy over Epochs")
plt.show()

